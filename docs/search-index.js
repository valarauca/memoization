var searchIndex = {};
searchIndex["memoization"] = {"doc":"Memoization offers a simple generic enum that allows for variables and\nstructure fields to become memoized. The generic signature is pretty ugly\nbut a user should be able to contain that within a structure. This is a \nfairly powerful pattern.","items":[[4,"Memoized","memoization","The enumerator that holds data. In its pre-processed state it holds a\npointer to the lambda that assigns its future constant value. ",null,null],[13,"UnInitialized","","",0,null],[13,"Processed","","",0,null],[11,"new","","Build a new memoized field. The user will pass a lambda function\nthat will provide the constructor with typing data.",0,{"inputs":[{"name":"func"}],"output":{"name":"memoized"}}],[11,"process","","This will convert an UnInitialized value to a Processed value. When\ncalled on a processed value it will panic.",0,null],[11,"fetch","","When passed input data the enum will execute, and return a CLONE of its\nresult. The data will be created at this stage. If the data already\nexists it will return a clone of the data.",0,null],[11,"get","","returns a clone of a processed field. If the field is not processed the\nfunction will panic.",0,null],[11,"is_initialized","","Informs user if filed has been processed/initalized.",0,null],[11,"deref","","",0,null],[11,"deref_mut","","",0,null],[11,"borrow","","",0,null]],"paths":[[4,"Memoized"]]};
initSearch(searchIndex);
